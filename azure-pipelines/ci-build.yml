# TODO Add a jupyter test like fast.ai

trigger:
- master

jobs:
- job: 'Build_and_Test_Windows'
  displayName: 'Build and Test Windows'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: 'Add conda to PATH'

  - script: 'conda env create --quiet --file test-environment.yml python=%PYTHON_VERSION%'
    displayName: 'Create Anaconda Environment'

  - script: |
      call activate test_environment
      pip install -e .
      pip install pytest pytest-azurepipelines
      pip install https://github.com/chstan/igorpy/tarball/712a4c4#egg=igor-0.3.1
    displayName: 'Install PyARPES and test requirements'

  - script: |
      call activate test_environment
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/test-results.xml'
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Platform vs2017-win2016 Python $(python.version)'


- job: 'Build_and_Test_Ubuntu'
  displayName: 'Build and Test Ubuntu'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - template: templates/unix-configure-conda-and-test.yml

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/test-results.xml'
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Platform ubuntu-16.04 Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '**/coverage.xml'
      reportDirectory: '**/htmlcov'


- job: 'Build_and_Test_Mac_OS_X'
  displayName: 'Build and Test Mac OS X'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  pool:
    vmImage: 'macOS-10.13'

  steps:
  - template: templates/unix-configure-conda-and-test.yml

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/test-results.xml'
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Platform macOS-10.13 Python $(python.version)'
