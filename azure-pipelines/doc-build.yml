trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  configuration: debug
  python.version: '3.6'

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python $(python.version)'
  inputs:
    versionSpec: '$(python.version)'

- script: 'sudo apt-get install pandoc'
  displayName: 'Install pandoc'

- script: 'python -m pip install --upgrade pip && pip install -r source/doc-requirements.txt'
  displayName: 'Install documentation dependencies'

- script: 'python -m sphinx.apidoc --separate -d 3 --tocfile toc -o source arpes --force'
  displayname: 'Sphinx APIdoc'

- script: 'make clean && make rst'
  displayname: 'Sphinx Build RST'

- script: 'python ./source/pandoc_convert.py'
  displayname: 'Pandoc RST -> Markdown'

- task: ArchiveFiles@2
  displayName: Zip Site
  inputs:
    rootFolderOrFile: '$(Agent.BuildDirectory)/docs'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- script:  >-
      curl
      -H 'Authorization: Bearer $(netlifyAccessToken)'
      -H 'Content-Type: application/zip'
      --data-binary '@$(Build.BuildId).zip'
      https://api.netlify.com/api/v1/sites/$(netlifySiteId)/deploys
  workingDirectory: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Upload to Netlify'